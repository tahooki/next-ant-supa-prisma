// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("NEXT_PUBLIC_DATABASE_URL")
}

// Users 테이블: auth ID와 내부 ID를 따로 관리
model Users {
  auth      String   @unique  // auth.users.id에 해당하는 UUID (고유값으로 설정)
  id        Int      @id @default(autoincrement()) // 내부 자동 증가 ID
  username  String?
  bio       String?
  createdAt DateTime @default(now())
  posts     Posts[]  // 사용자가 작성한 게시물들과의 관계
}

// Posts 테이블: Users와 연결 + onDelete 설정
model Posts {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime @default(now())
  user      Users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int      // Users 테이블의 내부 id와 연결된 외래 키
}
